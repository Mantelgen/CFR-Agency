plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'

  id 'org.springframework.boot' version '3.2.4'
  id 'io.spring.dependency-management' version '1.1.4'
}

group = 'ro.mpp2025'
version = '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'ro.mpp2025.proiectiss'
  mainClass = 'ro.mpp2025.proiectiss.HelloApplication'

  applicationDefaultJvmArgs = [
          '--add-opens=javafx.base/com.sun.javafx.event=ALL-UNNAMED',
          '--add-opens=javafx.base/com.sun.javafx.scene=ALL-UNNAMED',
          '--add-opens=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED',
          '--add-opens=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED'
  ]
}

javafx {
  version = '17.0.6' // Match your JavaFX version
  modules = ['javafx.controls', 'javafx.fxml']


}

dependencies {
  // JavaFX
  implementation "org.openjfx:javafx-base:17.0.8"
  implementation "org.openjfx:javafx-controls:17.0.8"
  implementation "org.openjfx:javafx-fxml:17.0.8"
  implementation "org.openjfx:javafx-graphics:17.0.8"

  // ControlsFX for UI enhancements like auto-completion
  implementation 'org.controlsfx:controlsfx:11.2.1'

  // Optional JavaFX UI enhancements
  implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
    exclude group: 'org.openjfx'
  }
  implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'

  // Spring Boot + JPA
  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

  // Hibernate & PostgreSQL
  implementation 'org.hibernate.orm:hibernate-core:6.6.13.Final'
  runtimeOnly 'org.postgresql:postgresql:42.7.1'

  // Testing
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
  useJUnitPlatform()
}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}